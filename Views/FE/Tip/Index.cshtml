@using Newtonsoft.Json
@using X.PagedList.Mvc.Common
@model X.PagedList.IPagedList<Tip>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Tips";
}

@{
    var httpContext = Context.Request.HttpContext;
    var userJson = httpContext.Session.GetString("userLogged");
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
<style>
    .rating {
        color: #ffc107;
        font-size: 18px;
    }
    .membership-label {
        position: absolute;
        top: 0;
        left: 0;
        background-color: lightskyblue;
        color: #fff;
        padding: 5px;
        border-radius: 5px;
        font-size: 10px;
        font-weight: bold;
    }
</style>

<div class="container" style="margin-top: 150px">
    <div class="row">
        <!-- Sidebar for Search and Filter -->
        <div class="col-xl-3 col-lg-3">
            <div class="sidebar">
                <h4>Filter</h4>
                <form asp-action="Index" asp-controller="Tip" method="get">
                    <div class="form-group">
                        <label for="categoryId">Category:</label>
                        <select name="categoryId" id="categoryId" class="form-control" asp-items="ViewBag.CategoryId">
                            <option value="" class="text-center">All Categories</option>
                        </select>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="ratingMin">Rating:</label>
                            <input name="ratingMin" id="ratingMin" class="form-control" type="number">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="ratingMax">to</label>
                            <input name="ratingMax" id="ratingMax" class="form-control" type="number">
                        </div>
                    </div>
                    <div class="d-flex justify-content-around">
                        <button type="submit" class="btn btn-danger">Filter</button>
                        <a asp-action="Index" asp-controller="Tip" class="btn btn-info">Reset</a>
                    </div>
                </form>
            </div>
        </div>


        <!-- Main Content Area -->
        <div class="col-xl-9 col-lg-9 border-left">
            <div class="mb-4">
                @if (!string.IsNullOrEmpty(userJson))
                {
                    <h3><a asp-action="Create" asp-controller="Tip">Create new tip</a></h3>
                }
                else
                {
                    <h3>You can <a asp-action="Login" asp-controller="Account" class="text-danger">Login</a> to post your own tip.</h3>
                }
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <form asp-action="Index" asp-controller="Tip" method="get">
                        <div class="form-actions no-color">
                            <h4>
                                <span>Search: </span>
                                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Enter title here ..."/>
                                <input type="submit" value="Search" class="btn btn-default"/>
                            </h4>
                        </div>
                    </form>
                </div>
                <div class="col-md-6 d-flex justify-content-end">
                    <h5>
                        <span class="d-inline">Sort: </span>
                        <h5><a asp-action="Index" asp-controller="Tip" asp-route-sortOrder="@ViewData["NameSort"]">Title | </a> </h5>
                        <h5><a asp-action="Index" asp-controller="Tip" asp-route-sortOrder="@ViewData["DateSort"]"> Date post | </a> </h5>
                        <h5><a asp-action="Index" asp-controller="Tip" asp-route-sortOrder="@ViewData["RatingSort"]"> Rating</a></h5>
                    </h5>
                </div>
            </div>
            
            <div class="recepie_area" style="margin-top: -50px">
                <div class="container">
                    <div class="row">
                        @foreach (var item in Model)
                        {
                            <div class="col-xl-4 col-lg-4 col-md-6" style="position: relative;">
                                @if (item.IsMembershipOnly)
                                {
                                    <span class="membership-label">Membership</span>
                                }
                                <div class="single_recepie text-center">
                                    <div class="recepie_thumb mt-2">
                                        <img style="height: 220px" src="~/@item.Image" alt="@item.Title">
                                    </div>
                                    <h3 style="font-family: sastify, sans-serif; color: indianred; ">@item.Title</h3>
                                    <span>@item.CreatedAt</span>
                                    <div class="rating mb-2">
                                        @for (int i = 0; i < item.Rating; i++)
                                        {
                                            <i class="fas fa-star"></i>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(userJson))
                                    {
                                        var user = JsonConvert.DeserializeObject<User>(userJson);
                                        if (@item.UserId == user!.UserId)
                                        {
                                            <a asp-action="UpdateTip" asp-controller="Tip" asp-route-id="@item.TipId"><button class="btn btn-info">Update</button></a>

                                        }
                                    }
                                    <a asp-action="SingleTip" class="line_btn" asp-controller="Tip" asp-route-id="@item.TipId">View tip's detail</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="text-center">
                @Html.PagedListPager(Model, page => Url.Action("Index", "Tip", new { page = page }),
                    new PagedListRenderOptions()
                    {
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                        ContainerDivClasses = new[] { "pagination", "justify-content-center" },
                        UlElementClasses = new[] { "pagination" }
                    })
            </div>
        </div>
    </div>
</div>


