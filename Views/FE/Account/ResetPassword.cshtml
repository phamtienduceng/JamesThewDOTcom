@model JamesRecipes.Models.User

@{
    ViewData["Title"] = "ResetPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-4 mx-auto">
        <h1 class="text-center">Reset Password</h1>
        <form asp-action="ResetPassword" asp-controller="Account" method="post">
            @if (ViewData["Error"] != null)
            {
                <div class="alert alert-danger">@ViewData["Error"]</div>
            }
            else if (ViewData["Error"] != null)
            {
                <div class="alert alert-success" color="green">@ViewData["Success"]</div>
            }
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input name="newpass" id="newPasswordInput" class="form-control" />
                <span id="newPasswordError" class="text-danger" style="display: none;">New Password is required.</span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirm</label>
                <input type="password" name="confirm" class="form-control" />
                <span id="confirmError" class="text-danger" style="display: none;">Confirm is required.</span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" onclick="return validateForm()" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function validateForm() {
            var newPasswordInput = document.getElementById('newPasswordInput');
            var confirmInput = document.getElementsByName('confirm')[0];

            var newPasswordError = document.getElementById('newPasswordError');
            var confirmError = document.getElementById('confirmError');

            var newPassword = newPasswordInput.value.trim();
            var confirm = confirmInput.value.trim();

            var isValid = true;

            if (newPassword === '') {
                newPasswordError.style.display = 'block';
                isValid = false;
            } else {
                newPasswordError.style.display = 'none';
            }

            if (confirm === '') {
                confirmError.style.display = 'block';
                isValid = false;
            } else {
                confirmError.style.display = 'none';
            }

            if (!isValid) {
                return false; // Ngăn chặn việc submit form nếu có lỗi required
            }

            if (newPassword.length < 6) {
                newPasswordError.textContent = 'Password must be at least 6 characters.';
                newPasswordError.style.display = 'block';
                return false;
            }

            if (!/[!@@#$%^&*()\-_=+{}|\\;:'"<>,./?]/.test(newPassword)) {
                newPasswordError.textContent = 'Password must contain at least one special character.';
                newPasswordError.style.display = 'block';
                return false;
            }

            return true; // Cho phép submit form
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}