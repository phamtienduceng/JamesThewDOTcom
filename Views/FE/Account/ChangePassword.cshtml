@model JamesRecipes.Models.User

@{
    ViewData["Title"] = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center" style="margin: 150px 0 50px 0">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header text-white text-center">
                    <h1 class="text-danger">Change Password</h1>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" asp-controller="Account" method="post" onsubmit="return validateForm()">
                        @if (ViewData["Error"] != null && !string.IsNullOrWhiteSpace(ViewData["Error"].ToString()))
                        {
                            <div class="alert alert-danger">@ViewData["Error"]</div>
                        }
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="Password" class="control-label">Old Password:</label>
                            <input type="password" name="oldpass" class="form-control" value="@ViewBag.Oldpass" />
                            <span id="passwordError" class="text-danger" style="display: none;">Old Password is required.</span>
                        </div>
                        <div class="form-group">
                            <label class="control-label">New Password:</label>
                            <input class="form-control" type="password" name="newPassword" id="newPasswordInput" value="@ViewBag.NewPassword" />
                            <span id="newPasswordError" class="text-danger" style="display: none;">New Password is required.</span>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Confirm Password:</label>
                            <input class="form-control" type="password" name="confirm" value="@ViewBag.Confirm" />
                            <span id="confirmError" class="text-danger" style="display: none;">Confirm is required.</span>
                        </div>
                        <div class="form-group text-center">
                            <input type="submit" value="Change" class="btn btn-primary btn-block" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function showSuccessAlert() {
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: '@TempData["SuccessMessage"]',
            confirmButtonText: 'OK'
        }).then(function () {
            window.location.href = '@Url.Action("Index", "Home")';
        });
    }
    function validateForm() {
        var passwordInput = document.getElementsByName('oldpass')[0];
        var newPasswordInput = document.getElementById('newPasswordInput');
        var confirmInput = document.getElementsByName('confirm')[0];

        var passwordError = document.getElementById('passwordError');
        var newPasswordError = document.getElementById('newPasswordError');
        var confirmError = document.getElementById('confirmError');

        var password = passwordInput.value.trim();
        var newPassword = newPasswordInput.value.trim();
        var confirm = confirmInput.value.trim();

        var isValid = true;

        if (password === '') {
            passwordError.style.display = 'block';
            isValid = false;
        } else {
            passwordError.style.display = 'none';
        }

        if (newPassword === '') {
            newPasswordError.style.display = 'block';
            isValid = false;
        } else {
            newPasswordError.style.display = 'none';
        }

        if (confirm === '') {
            confirmError.style.display = 'block';
            isValid = false;
        } else {
            confirmError.style.display = 'none';
        }

        if (!isValid) {
            return false; // Ngăn chặn việc submit form nếu có lỗi required
        }

        if (newPassword.length < 6) {
            newPasswordError.textContent = 'Password must be at least 6 characters.';
            newPasswordError.style.display = 'block';
            return false;
        }

        if (!/[!@@#$%^&*()\-_=+{}|\\;:'"<>,./?]/.test(newPassword)) {
            newPasswordError.textContent = 'Password must contain at least one special character.';
            newPasswordError.style.display = 'block';
            return false;
        }
        showSuccessAlert();
        return true; // Cho phép submit form
    }
</script>
